apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gatekeeper-deployment
  namespace: acm-subscriptions
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: inform
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-gatekeeper-deployment-prod
        spec:
          remediationAction: inform # will be overridden by remediationAction in parent policy
          severity: low
          namespaceSelector:
            exclude: ["kube-*"]
            include: ["default"]
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                items:
                - apiVersion: apps/v1
                  kind: Deployment
                  metadata:
                    annotations:
                    labels:
                      control-plane: controller-manager
                      gatekeeper.sh/operation: audit
                      gatekeeper.sh/system: "yes"
                    name: gatekeeper-audit
                    namespace: gatekeeper-system
                  spec:
                    progressDeadlineSeconds: 600
                    replicas: 1
                    revisionHistoryLimit: 10
                    selector:
                      matchLabels:
                        control-plane: audit-controller
                        gatekeeper.sh/operation: audit
                        gatekeeper.sh/system: "yes"
                    strategy:
                      rollingUpdate:
                        maxSurge: 25%
                        maxUnavailable: 25%
                      type: RollingUpdate
                    template:
                      metadata:
                        creationTimestamp: null
                        labels:
                          control-plane: audit-controller
                          gatekeeper.sh/operation: audit
                          gatekeeper.sh/system: "yes"
                      spec:
                        containers:
                        - args:
                          - --operation=audit
                          - --operation=status
                          - --logtostderr
                          command:
                          - /manager
                          env:
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          image: openpolicyagent/gatekeeper:v3.3.0-beta.1
                          imagePullPolicy: Always
                          livenessProbe:
                            failureThreshold: 3
                            httpGet:
                              path: /healthz
                              port: 9090
                              scheme: HTTP
                            periodSeconds: 10
                            successThreshold: 1
                            timeoutSeconds: 1
                          name: manager
                          ports:
                          - containerPort: 8888
                            name: metrics
                            protocol: TCP
                          - containerPort: 9090
                            name: healthz
                            protocol: TCP
                          readinessProbe:
                            failureThreshold: 3
                            httpGet:
                              path: /readyz
                              port: 9090
                              scheme: HTTP
                            periodSeconds: 10
                            successThreshold: 1
                            timeoutSeconds: 1
                          resources:
                            limits:
                              cpu: "1"
                              memory: 512Mi
                            requests:
                              cpu: 100m
                              memory: 256Mi
                          terminationMessagePath: /dev/termination-log
                          terminationMessagePolicy: File
                        dnsPolicy: ClusterFirst
                        nodeSelector:
                          kubernetes.io/os: linux
                        restartPolicy: Always
                        schedulerName: default-scheduler
                        securityContext: {}
                        serviceAccount: gatekeeper-admin
                        serviceAccountName: gatekeeper-admin
                        terminationGracePeriodSeconds: 60
            - complianceType: musthave
              objectDefinition:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  labels:
                    control-plane: controller-manager
                    gatekeeper.sh/operation: webhook
                    gatekeeper.sh/system: "yes"
                spec:
                  progressDeadlineSeconds: 600
                  replicas: 3
                  revisionHistoryLimit: 10
                  selector:
                    matchLabels:
                      control-plane: controller-manager
                      gatekeeper.sh/operation: webhook
                      gatekeeper.sh/system: "yes"
                  strategy:
                    rollingUpdate:
                      maxSurge: 25%
                      maxUnavailable: 25%
                    type: RollingUpdate
                  template:
                    metadata:
                      creationTimestamp: null
                      labels:
                        control-plane: controller-manager
                        gatekeeper.sh/operation: webhook
                        gatekeeper.sh/system: "yes"
                    spec:
                      affinity:
                        podAntiAffinity:
                          preferredDuringSchedulingIgnoredDuringExecution:
                          - podAffinityTerm:
                              labelSelector:
                                matchExpressions:
                                - key: gatekeeper.sh/operation
                                  operator: In
                                  values:
                                  - webhook
                              topologyKey: kubernetes.io/hostname
                            weight: 100
                      containers:
                      - args:
                        - --port=8443
                        - --logtostderr
                        - --exempt-namespace=gatekeeper-system
                        - --operation=webhook
                        command:
                        - /manager
                        env:
                        - name: POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.name
                        image: openpolicyagent/gatekeeper:v3.3.0-beta.1
                        imagePullPolicy: Always
                        livenessProbe:
                          failureThreshold: 3
                          httpGet:
                            path: /healthz
                            port: 9090
                            scheme: HTTP
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        name: manager
                        ports:
                        - containerPort: 8443
                          name: webhook-server
                          protocol: TCP
                        - containerPort: 8888
                          name: metrics
                          protocol: TCP
                        - containerPort: 9090
                          name: healthz
                          protocol: TCP
                        readinessProbe:
                          failureThreshold: 3
                          httpGet:
                            path: /readyz
                            port: 9090
                            scheme: HTTP
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        resources:
                          limits:
                            cpu: "1"
                            memory: 512Mi
                          requests:
                            cpu: 100m
                            memory: 256Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        volumeMounts:
                        - mountPath: /certs
                          name: cert
                          readOnly: true
                      dnsPolicy: ClusterFirst
                      nodeSelector:
                        kubernetes.io/os: linux
                      restartPolicy: Always
                      schedulerName: default-scheduler
                      securityContext: {}
                      serviceAccount: gatekeeper-admin
                      serviceAccountName: gatekeeper-admin
                      terminationGracePeriodSeconds: 60
                      volumes:
                      - name: cert
                        secret:
                          defaultMode: 420
                          secretName: gatekeeper-webhook-server-cert


---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-gatekeeper-deployment
  namespace: acm-subscriptions
placementRef:
  name: placement-policy-gatekeeper-deployment
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-gatekeeper-deployment
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-gatekeeper-deployment
  namespace: acm-subscriptions
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: name, operator: In, values: ["local-cluster"]}
